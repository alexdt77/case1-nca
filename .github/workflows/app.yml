name: App

on:
  push:
    paths: ['app/**', '.github/workflows/app.yml']
  workflow_dispatch: {}

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO_NAME: case1nca-api
  CLUSTER_NAME: case1-nca
  SERVICE_NAME: app

jobs:
  deploy:
    runs-on: ubuntu-latest   # <- niet meer self-hosted macOS
    steps:
      - uses: actions/checkout@v4

      # AWS creds (jij gebruikt keys; dit is prima)
      - name: Configure AWS credentials (temporary creds)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ env.AWS_REGION }}

      # Buildx voor cross-platform builds
      - name: Enable Buildx (for cross-platform amd64)
        uses: docker/setup-buildx-action@v3

      # Login op ECR (makkelijkste manier)
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build & push image (linux/amd64) -> ECR
      - name: Build & Push image (linux/amd64)
        uses: docker/build-push-action@v5
        with:
          context: ./app
          platforms: linux/amd64
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:latest

      # Forceer ECS her-deploy van de service
      - name: Force ECS redeploy
        run: |
          aws ecs update-service \
            --cluster "${CLUSTER_NAME}" \
            --service "${SERVICE_NAME}" \
            --force-new-deployment
