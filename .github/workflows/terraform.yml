name: Terraform

on:
  push:
    branches: [main]
    paths: ["infra/**", ".github/workflows/terraform.yml"]
  pull_request:
    paths: ["infra/**", ".github/workflows/terraform.yml"]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

concurrency:
  group: tf-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform:
    runs-on: [self-hosted, mac]
    defaults:
      run:
        shell: bash
        working-directory: infra/envs/dev
    env:
      TF_VAR_env: dev
      TF_VAR_vpc_id: ${{ vars.VPC_ID }}
      TF_VAR_subnet_id: ${{ vars.SUBNET_ID }}
      TF_VAR_my_ip_cidr: ${{ vars.MY_IP_CIDR }}
      TF_VAR_db_master_username: appadmin
      TF_VAR_db_master_password: ${{ secrets.DB_MASTER_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Init
        run: terraform init -reconfigure -backend-config=backend.hcl
      - name: Validate
        run: terraform validate -no-color
      - name: Plan (PR)
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -no-color -out=tfplan -lock-timeout=5m
      - name: Apply (main/dispatch)
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -input=false -auto-approve -lock-timeout=5m
