name: Terraform

on:
  push: { branches: [main], paths: [infra/**, .github/workflows/terraform.yml] }
  pull_request: { paths: [infra/**, .github/workflows/terraform.yml] }
  workflow_dispatch: {}

permissions: { id-token: write, contents: read }

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_IN_AUTOMATION: true
  TF_VAR_vpc_id:        ${{ vars.VPC_ID }}
  TF_VAR_subnet_id:     ${{ vars.SUBNET_ID }}
  TF_VAR_my_ip_cidr:    ${{ vars.MY_IP_CIDR }}
  TF_VAR_env:           ${{ vars.ENV }}
  TF_VAR_db_master_username: appadmin
  TF_VAR_db_master_password:      ${{ secrets.DB_MASTER_PASSWORD }}
  TF_VAR_db_password_secret_name: ${{ secrets.TF_VAR_DB_PASSWORD_SECRET_NAME }}

jobs:
  terraform:
    runs-on: [self-hosted, mac]
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - run: terraform -chdir=infra/envs/dev init -reconfigure -backend-config=backend.hcl
      - run: terraform -chdir=infra/envs/dev validate -no-color

      - name: Plan (PR)
        if: github.event_name == 'pull_request'
        run: terraform -chdir=infra/envs/dev plan -input=false -no-color -out=tfplan

      - name: Apply (main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform -chdir=infra/envs/dev apply -input=false -auto-approve
