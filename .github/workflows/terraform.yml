name: Terraform

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Runner for APPLY"
        required: true
        default: windows
        type: choice
        options: [windows, mac]
  push:
    branches: [ "main" ]
    paths: [ "infra/**" ]
  pull_request:
    paths: [ "infra/**" ]

permissions:
  id-token: write   # for OIDC
  contents: read

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_VAR_aws_region: eu-central-1
  TF_VAR_db_master_username: ${{ secrets.DB_MASTER_USERNAME }}
  TF_VAR_db_master_password: ${{ secrets.DB_MASTER_PASSWORD }}

jobs:
  apply-windows:
    name: Apply (Windows self-hosted)
    runs-on: [self-hosted, windows]
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.target == 'windows'))
    defaults:
      run:
        shell: powershell
        working-directory: infra/envs/dev
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::760981412376:role/GitHubActionsOIDC
          aws-region: ${{ env.TF_VAR_aws_region }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Terraform Init (backend.hcl)
        run: terraform init -input=false -reconfigure -backend-config="backend.hcl"
      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve

  apply-mac:
    name: Apply (macOS self-hosted)
    runs-on: [self-hosted, mac]
    if: github.event_name == 'workflow_dispatch' && inputs.target == 'mac'
    defaults:
      run:
        shell: bash
        working-directory: infra/envs/dev
    steps:
      - uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::760981412376:role/GitHubActionsOIDC
          aws-region: ${{ env.TF_VAR_aws_region }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Terraform Init (backend.hcl)
        run: terraform init -input=false -reconfigure -backend-config="backend.hcl"
      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve

  plan-mac:
    name: Plan (macOS self-hosted)
    runs-on: [self-hosted, mac]
    if: github.event_name == 'pull_request'
    defaults:
      run:
        shell: bash
        working-directory: infra/envs/dev
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::760981412376:role/GitHubActionsOIDC
          aws-region: ${{ env.TF_VAR_aws_region }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Terraform Init (backend.hcl)
        run: terraform init -input=false -reconfigure -backend-config="backend.hcl"
      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Terraform Plan
        run: terraform plan -input=false -no-color -out=tfplan
