name: Terraform

on:
  workflow_dispatch:
  pull_request:
    paths: ["infra/**"]
  push:
    branches: ["main"]
    paths: ["infra/**"]

jobs:
  tf:
    runs-on: self-hosted
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: infra/envs/dev   # alleen de map

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::760981412376:role/GitHubActionsOIDC
          aws-region: eu-central-1

      # Probeer eerst de officiÃ«le setup (als het werkt is dit het mooist)
      - name: Setup Terraform (toolcache)
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      # Fallback: als 'terraform' nog steeds niet gevonden wordt, download zelf
      - name: Ensure Terraform on PATH (fallback)
        shell: powershell
        run: |
          if (-not (Get-Command terraform -ErrorAction SilentlyContinue)) {
            $version = "1.7.5"
            $tfRoot  = "$env:RUNNER_TEMP\terraform"
            New-Item -ItemType Directory -Force -Path $tfRoot | Out-Null
            $zip = "$tfRoot\terraform.zip"
            $url = "https://releases.hashicorp.com/terraform/$version/terraform_${version}_windows_amd64.zip"
            Write-Host "Downloading Terraform $version from $url"
            Invoke-WebRequest -Uri $url -OutFile $zip
            Add-Type -AssemblyName System.IO.Compression.FileSystem
            [System.IO.Compression.ZipFile]::ExtractToDirectory($zip, $tfRoot, $true)
            # Pad met terraform.exe toevoegen aan PATH voor volgende steps
            "$tfRoot" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }
          terraform -version

      - name: Terraform fmt
        shell: powershell
        run: terraform fmt -check

      - name: Terraform init
        shell: powershell
        run: terraform init -upgrade

      - name: Terraform validate
        shell: powershell
        run: terraform validate -no-color

      - name: Terraform plan (PR)
        if: github.event_name == 'pull_request'
        shell: powershell
        run: terraform plan -out=tfplan

      - name: Terraform apply (main)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        shell: powershell
        run: terraform apply -auto-approve
